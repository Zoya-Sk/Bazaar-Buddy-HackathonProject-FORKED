<div class="row">
  <!-- Left Sidebar -->
  <div class="col-lg-3 col-md-4 col-sm-12 mb-3">
    <div class="p-3 rounded test">
      <h4 class="mb-3">Market Trends</h4>

      <!-- Weather & Market Trends Widget -->
      <div class="weather-widget mb-3">
        <form id="weatherForm" class="d-flex flex-column gap-2">
          <input
            type="text"
            id="cityInput"
            class="form-control"
            placeholder="Enter city"
            required
          />
          <input
            type="text"
            id="productInput"
            class="form-control"
            placeholder="Enter product"
            required
          />
          <button type="submit" class="btn btn-sm btn-primary">
            Get Trends
          </button>
        </form>

        <div id="weatherResult" class="mt-3 text-center small d-none">
          <h6 id="weatherCity" class="mb-1"></h6>
          <div id="weatherTemp"></div>
          <div id="weatherDesc" class="text-muted"></div>
          <div id="priceAdvice" class="mt-2 fw-bold"></div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const form = document.getElementById('weatherForm');
  const cityInput = document.getElementById('cityInput');
  const productInput = document.getElementById('productInput');

  const weatherResult = document.getElementById('weatherResult');
  const cityName = document.getElementById('weatherCity');
  const weatherTemp = document.getElementById('weatherTemp');
  const weatherDesc = document.getElementById('weatherDesc');
  const priceAdvice = document.getElementById('priceAdvice');

  const apiKey = '10e6b0aef1c0117d8fd04515831ad1d1';

  const loadingSpinner = document.createElement('div');
  loadingSpinner.className = 'spinner-border text-info mt-3';
  loadingSpinner.role = 'status';
  loadingSpinner.innerHTML = '<span class="visually-hidden">Loading...</span>';

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const city = cityInput.value.trim();
    const product = productInput.value.trim().toLowerCase();

    weatherResult.classList.add('d-none');
    form.appendChild(loadingSpinner);

    try {
      const res = await fetch(
        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`,
      );
      const data = await res.json();
      if (data.cod !== 200) throw new Error(data.message);

      const temp = data.main.temp;
      const desc = data.weather[0].main.toLowerCase();

      const month = new Date().getMonth(); // 0 = Jan
      const isFestivalSeason = [9, 10, 11].includes(month);

      const rareProducts = [
        'saffron',
        'avocado',
        'mango',
        'dragon fruit',
        'blueberry',
        'raspberry',
        'gooseberry',
        'black garlic',
        'kale',
        'quinoa',
        'artichoke',
        'wasabi root',
        'asparagus',
        'macadamia nuts',
        'pine nuts',
        'truffle',
        'truffle oil',
        'passion fruit',
        'fig',
        'pomegranate',
        'starfruit',
        'durian',
        'morel mushrooms',
        'enoki mushrooms',
        'sun-dried tomato',
        'jalapeno',
        'bok choy',
        'edamame',
        'baby corn',
        'zucchini',
        'arugula',
        'beet greens',
        'cranberry',
        'goji berry',
        'chia seeds',
        'soursop',
        'rambutan',
        'langsat',
        'longan',
        'blackberries',
        'mulberries',
        'feijoa',
        'pomelo',
        'tamarillo',
        'persimmon',
        'plantain',
        'jamun (java plum)',
        'karonda (natal plum)',
        'bael (wood apple)',
        'sitaphal (custard apple)',
        'ber (indian jujube)',
        'makhana (fox nuts)',
        'sabja seeds (sweet basil seeds)',
        'hemp seeds',
        'pumpkin seeds',
        'flax seeds',
        'matcha powder',
        'aonori (seaweed flakes)',
        'seaweed',
        'spirulina',
      ];

      const perishableProducts = [
        'tomato',
        'milk',
        'curd',
        'onion',
        'spinach',
        'paneer',
        'green peas',
        'banana',
        'grapes',
        'watermelon',
        'papaya',
        'strawberries',
        'lychee',
        'green chillies',
        'bottle gourd (lauki)',
        'ash gourd (petha)',
        'jackfruit (kathal)',
        'coconut water',
        'drumstick (moringa pods)',
        'beans',
        'brinjal',
        'coriander leaves',
        'mint leaves',
        'curry leaves',
        'raw turmeric',
        'raw ginger',
        'okra (bhindi)',
        'cauliflower',
        'cabbage',
        'radish',
        'sweet lime (mosambi)',
        'sapota (chikoo)',
        'green garlic',
        'fresh bamboo shoots',
        'amaranth leaves',
        'lotus stem',
        'fresh methi (fenugreek)',
        'mustard greens (sarson)',
        'lettuce',
        'broccoli',
        'ridge gourd (turai)',
        'bitter gourd (karela)',
        'pumpkin',
        'cucumber',
        'turnip',
        'carrot',
        'beetroot',
        'spring onion',
        'garlic sprouts',
        'french beans',
        'leeks',
        'basil',
        'lemongrass',
        'galangal',
        'parsley',
        'dill leaves',
        'bay leaves',
        'white turmeric (kachchi haldi)',
        'apple',
        'peach',
        'plum',
        'guava',
        'pear',
        'lemon',
        'lime',
        'orange',
        'butter',
        'cheese',
        'cream',
        'yogurt',
        'buttermilk',
        'ghee',
        'soy milk',
        'tofu',
        'meat',
        'fish',
        'chicken',
        'eggs',
        'prawns',
        'lamb',
        'duck',
        'cottage cheese',
        'bread',
        'pastries',
        'cooked rice',
        'chapati/dosa batter',
        'fresh fruit juices',
        'fresh coconut',
      ];

      let trend = 'stable';
      let advice = 'üü¢ No major price change expected. You can buy today.';

      if (rareProducts.includes(product)) {
        trend = 'spike';
        advice =
          'üî∫ Price spike likely due to product rarity. Consider delaying purchase.';
      }

      if (
        perishableProducts.includes(product) &&
        (desc.includes('rain') || temp < 25)
      ) {
        trend = 'drop';
        advice = 'üîª Weather may lower prices. Wait before buying.';
      }

      if (isFestivalSeason && ['onion', 'paneer', 'ghee'].includes(product)) {
        trend = 'spike';
        advice =
          'üéâ Festival season likely to push prices up. Avoid stocking up.';
      }

      // Animate and display result
      setTimeout(() => {
        loadingSpinner.remove();
        weatherResult.classList.remove('d-none');
        weatherResult.classList.add('animate__animated', 'animate__fadeInUp');
        cityName.textContent = `üìç ${data.name}`;
        weatherTemp.textContent = `üå°Ô∏è ${temp}¬∞C`;
        priceAdvice.textContent = advice;
        priceAdvice.style.color =
          trend === 'spike' ? 'red' : trend === 'drop' ? 'blue' : 'green';
      }, 600);
    } catch (err) {
      loadingSpinner.remove();
      weatherResult.classList.remove('d-none');
      weatherResult.classList.add('animate__animated', 'animate__shakeX');
      cityName.textContent = '‚ö†Ô∏è Error';
      weatherTemp.textContent = '';
      priceAdvice.textContent = '';
      priceAdvice.style.color = 'gray';
    }
  });
</script>
